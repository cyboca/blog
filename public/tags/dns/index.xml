<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DNS on panda power!</title>
    <link>https://cyboca.ga/tags/dns/</link>
    <description>Recent content in DNS on panda power!</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 16 Nov 2019 01:08:23 +0800</lastBuildDate>
    
	<atom:link href="https://cyboca.ga/tags/dns/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>DNS&amp;BIND(1)</title>
      <link>https://cyboca.ga/post/syn/dns1/</link>
      <pubDate>Sat, 16 Nov 2019 01:08:23 +0800</pubDate>
      
      <guid>https://cyboca.ga/post/syn/dns1/</guid>
      <description> 1.DNS DNS主要是用于将域名解析为IP地址的协议，有时候也用于将IP地址反向解析成域名，所以DNS可以实现双向解析。
DNS可以使用TCP和UDP的53端口，基本使用UDP协议的53端口。
1.1域的分类 域是分层管理的，最高层的域是根域&amp;rdquo;.&amp;ldquo;，就是一个点，根域的下一层就是第二层次的顶级域。顶级域下来就是普通的域，如baidu.com。
1.2DNS解析流程  访问www.baidu.com为例  1.访问www.baidu.com，首先会查找DNS缓存，再查找hosts文件，还没有的话就找DNS服务器。
2.DNS服务器收到询问请求，查看自己是否有www.baidu.com的缓存，如果有就直接返回给客户端，没有就越级上访到根域&amp;rdquo;.&amp;ldquo;，并询问根域。
3.根域看到是找.com域的，把到.com域的地址告诉DNS服务器，让DNS服务器去找.com询问。
4.DNS服务器去找.com，.com看是自己辖下的baidu.com，就把IP地址给DNS服务器，让它去找baidu.com。
5.DNS服务器把得到的www.baidu.com的IP告诉客户端.
6.客户端得到IP地址后缓存下来，并去访问www.baidu.com，然后www.baidu.com就把页面内容发送给客户端，就是百度页面。
 需要说明的是
 本机查缓存后没有结果，会查hosts文件，如果没有找到再把查询发送给DNS服务器，但这是默认情况，这个默认顺序是可以改变的。在/etc/nsswitch.conf中有一行&amp;rdquo; hosts: files dns&amp;rdquo;就是定义先查找hosts文件还是先提交给DNS服务器，如果修改为&amp;rdquo;hosts: dns files&amp;rdquo;先提交给DNS服务器。
   缓存是多层次的，所以真正的查询可能并没有那么多步骤，上面的步骤是完全没有所需缓存的查询情况。假如曾经向DNS服务器提交了www.baidu.com的查询，那么在DNS服务器上不但缓存了www.baidu.com的记录，还缓存了&amp;rdquo;.com&amp;rdquo;和&amp;rdquo;baidu.com&amp;rdquo;的记录，如果再有主机向该DNS服务器提交xxx.baidu.com的查询，那么将跳过&amp;rdquo;.&amp;ldquo;和&amp;rdquo;.com&amp;rdquo;的查询过程直接向baidu.com发出查询请求。  1.3/etc/resolv.conf  主要用于定义dns指向，查询主机名时明确指定使用哪个dns服务器，例如此文件中指定了&amp;rdquo;nameserver 114.114.114.114&amp;rdquo;，要查询主机名时，会向114.114.114.114dns服务器发起递归查询，dns服务器会帮忙查找并返回给你结果。  </description>
    </item>
    
  </channel>
</rss>